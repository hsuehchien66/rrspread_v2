library(ggplot2)
library(ggpattern)
file_path <- "/Users/hc14/Documents/GPS_collaborator/Taiwan/NHRI/Analysis/GPS_Taiwan_illumina_136samples_metadata_for_plot.xlsx"
tibble = readxl::read_excel(file_path, sheet=1)
data_frame = as.data.frame(tibble)
data_frame[which(data_frame$GPSC == "_"), "GPSC"] <- "Others"
data_frame[which(data_frame$GPSC == "904;9"), "GPSC"] <- "9"
data_frame[which(data_frame$Serotype.x == "_"), "Serotype.x"] <- "Others"
metadata_df <- data_frame
## Generate pair-freq table
Generate_GPSC_Serotype_Vaccine_freqtable <- function(metadata_df,
pair_colname1="GPSC", pair_colname2="Serotype.x", pair_colname3="vac_period",
n_output_col=6,
output_colnames=c("GPSC", "Serotype", "Vaccine_Period", "Count", "Proportion", "Pair_Name")){
for(isolate in 1:nrow(metadata_df)){
metadata_df[isolate, "pair"] = paste(metadata_df[isolate, pair_colname1],
metadata_df[isolate, pair_colname2],
metadata_df[isolate, pair_colname3], sep = "_")
}
pair_freq <- as.data.frame(table(metadata_df$pair))
colnames(pair_freq) <- c("name", "freq")
dsize <- matrix(0, nrow = nrow(pair_freq), ncol = n_output_col)
gpsc_sero_vacperiod_df = as.data.frame(dsize)
colnames(gpsc_sero_vacperiod_df ) <- output_colnames
for (i in 1:nrow(pair_freq)) {
gpsc = strsplit(as.character(pair_freq[i,1]), "_")[[1]][1]
pair_freq$gpsc[i] = gpsc
sero = strsplit(as.character(pair_freq[i,1]),"_")[[1]][2]
vac_period = strsplit(as.character(pair_freq[i,1]),"_")[[1]][3]
gpsc_sero_vacperiod_df[i, "GPSC"] = gpsc
gpsc_sero_vacperiod_df[i, "Serotype"] = sero
gpsc_sero_vacperiod_df[i, "Vaccine_Period"] = vac_period
gpsc_sero_vacperiod_df[i, "Pair_Name"] = as.character(pair_freq[i, "name"])
}
uniq_pair = unique(metadata_df$pair)
### each row is a population-serotype-gpsc pair
num_pre_vac = length(which(metadata_df$vac_period == "pre-PCV13"))
num_post_vac = length(which(metadata_df$vac_period == "post-PCV13"))
for (p in uniq_pair){
selected_pair = metadata_df[which(metadata_df$pair == p),]
t_count = nrow(selected_pair)
gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Count"] = t_count
if(gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Vaccine_Period"] == "pre-PCV13"){
gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Proportion"] = t_count/num_pre_vac
}else{
gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Proportion"] = t_count/num_post_vac
}
}
return(gpsc_sero_vacperiod_df)
}
GPS_freq_table <- Generate_GPSC_Serotype_Vaccine_freqtable(metadata_df = metadata_df)
ggplot(GPS_freq_table) +
geom_bar(aes(x = Vaccine_Period, y = Proportion, fill = Serotype),
position = "stack",
stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("GPSC")+
facet_grid(~ GPSC, switch = "x") +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(-.01,"cm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
scale_fill_manual(breaks = serotype_colorcode$Serotype,
values= serotype_colorcode$Serotype__colour)
serotype_colorcode <- read.table("/Users/hc14/Documents/GPS_collaborator/ISPPD13_workshop/serotype__colours.csv",
sep = ",", comment.char = "&", header = TRUE)
ggplot(GPS_freq_table) +
geom_bar(aes(x = Vaccine_Period, y = Proportion, fill = Serotype),
position = "stack",
stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("GPSC")+
facet_grid(~ GPSC, switch = "x") +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(-.01,"cm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
scale_fill_manual(breaks = serotype_colorcode$Serotype,
values= serotype_colorcode$Serotype__colour)
