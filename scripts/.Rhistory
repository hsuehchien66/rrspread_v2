library(ggplot2)
library(ggpattern)
file_path <- "/Users/hc14/Documents/GPS_collaborator/Taiwan/NHRI/Analysis/GPS_Taiwan_illumina_136samples_metadata_for_plot.xlsx"
tibble = readxl::read_excel(file_path, sheet=1)
data_frame = as.data.frame(tibble)
data_frame[which(data_frame$GPSC == "_"), "GPSC"] <- "Others"
data_frame[which(data_frame$GPSC == "904;9"), "GPSC"] <- "9"
data_frame[which(data_frame$Serotype.x == "_"), "Serotype.x"] <- "Others"
metadata_df <- data_frame
## Generate pair-freq table
Generate_GPSC_Serotype_Vaccine_freqtable <- function(metadata_df,
pair_colname1="GPSC", pair_colname2="Serotype.x", pair_colname3="vac_period",
n_output_col=6,
output_colnames=c("GPSC", "Serotype", "Vaccine_Period", "Count", "Proportion", "Pair_Name")){
for(isolate in 1:nrow(metadata_df)){
metadata_df[isolate, "pair"] = paste(metadata_df[isolate, pair_colname1],
metadata_df[isolate, pair_colname2],
metadata_df[isolate, pair_colname3], sep = "_")
}
pair_freq <- as.data.frame(table(metadata_df$pair))
colnames(pair_freq) <- c("name", "freq")
dsize <- matrix(0, nrow = nrow(pair_freq), ncol = n_output_col)
gpsc_sero_vacperiod_df = as.data.frame(dsize)
colnames(gpsc_sero_vacperiod_df ) <- output_colnames
for (i in 1:nrow(pair_freq)) {
gpsc = strsplit(as.character(pair_freq[i,1]), "_")[[1]][1]
pair_freq$gpsc[i] = gpsc
sero = strsplit(as.character(pair_freq[i,1]),"_")[[1]][2]
vac_period = strsplit(as.character(pair_freq[i,1]),"_")[[1]][3]
gpsc_sero_vacperiod_df[i, "GPSC"] = gpsc
gpsc_sero_vacperiod_df[i, "Serotype"] = sero
gpsc_sero_vacperiod_df[i, "Vaccine_Period"] = vac_period
gpsc_sero_vacperiod_df[i, "Pair_Name"] = as.character(pair_freq[i, "name"])
}
uniq_pair = unique(metadata_df$pair)
### each row is a population-serotype-gpsc pair
num_pre_vac = length(which(metadata_df$vac_period == "pre-PCV13"))
num_post_vac = length(which(metadata_df$vac_period == "post-PCV13"))
for (p in uniq_pair){
selected_pair = metadata_df[which(metadata_df$pair == p),]
t_count = nrow(selected_pair)
gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Count"] = t_count
if(gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Vaccine_Period"] == "pre-PCV13"){
gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Proportion"] = t_count/num_pre_vac
}else{
gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Proportion"] = t_count/num_post_vac
}
}
return(gpsc_sero_vacperiod_df)
}
GPS_freq_table <- Generate_GPSC_Serotype_Vaccine_freqtable(metadata_df = metadata_df)
ggplot(GPS_freq_table) +
geom_bar(aes(x = Vaccine_Period, y = Proportion, fill = Serotype),
position = "stack",
stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("GPSC")+
facet_grid(~ GPSC, switch = "x") +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(-.01,"cm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
scale_fill_manual(breaks = serotype_colorcode$Serotype,
values= serotype_colorcode$Serotype__colour)
serotype_colorcode <- read.table("/Users/hc14/Documents/GPS_collaborator/ISPPD13_workshop/serotype__colours.csv",
sep = ",", comment.char = "&", header = TRUE)
ggplot(GPS_freq_table) +
geom_bar(aes(x = Vaccine_Period, y = Proportion, fill = Serotype),
position = "stack",
stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
xlab("GPSC")+
facet_grid(~ GPSC, switch = "x") +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(-.01,"cm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank())+
scale_fill_manual(breaks = serotype_colorcode$Serotype,
values= serotype_colorcode$Serotype__colour)
#install.packages("ggplot2")
#install.packages("ggpattern")
library(ggplot2)
library(ggpattern)
#install.packages("ggplot2")
#install.packages("ggpattern")
library(ggplot2)
library(ggpattern)
Generate_GPSC_Serotype_Vaccine_freqtable <- function(metadata_df,
pair_colname1="GPSC", pair_colname2="In_Silico_Serotype", pair_colname3="Vaccine_Period",
n_output_col=6,
output_colnames=c("GPSC", "Serotype", "Vaccine_Period", "Count", "Proportion", "Pair_Name")){
for(isolate in 1:nrow(metadata_df)){
metadata_df[isolate, "pair"] = paste(metadata_df[isolate, pair_colname1],
metadata_df[isolate, pair_colname2],
metadata_df[isolate, pair_colname3], sep = "_")
}
pair_freq <- as.data.frame(table(metadata_df$pair))
colnames(pair_freq) <- c("name", "freq")
dsize <- matrix(0, nrow = nrow(pair_freq), ncol = n_output_col)
gpsc_sero_vacperiod_df = as.data.frame(dsize)
colnames(gpsc_sero_vacperiod_df ) <- output_colnames
for (i in 1:nrow(pair_freq)) {
gpsc = strsplit(as.character(pair_freq[i,1]), "_")[[1]][1]
pair_freq$gpsc[i] = gpsc
sero = strsplit(as.character(pair_freq[i,1]),"_")[[1]][2]
vac_period = strsplit(as.character(pair_freq[i,1]),"_")[[1]][3]
gpsc_sero_vacperiod_df[i, "GPSC"] = gpsc
gpsc_sero_vacperiod_df[i, "Serotype"] = sero
gpsc_sero_vacperiod_df[i, "Vaccine_Period"] = vac_period
gpsc_sero_vacperiod_df[i, "Pair_Name"] = as.character(pair_freq[i, "name"])
}
uniq_pair = unique(metadata_df$pair)
### each row is a population-serotype-gpsc pair
num_pre_vac = length(which(metadata_df[,pair_colname3] == "Pre-PCV"))
num_PCV7 = length(which(metadata_df[,pair_colname3] == "PCV7"))
num_PCV13 = length(which(metadata_df[,pair_colname3] == "PCV13"))
for (p in uniq_pair){
selected_pair = metadata_df[which(metadata_df$pair == p),]
t_count = nrow(selected_pair)
gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Count"] = t_count
if(gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Vaccine_Period"] == "pre-PCV"){
gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Proportion"] = t_count/num_pre_vac
}else if(gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Vaccine_Period"] == "PCV7"){
gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Proportion"] = t_count/num_PCV7
}else{
gpsc_sero_vacperiod_df[which(gpsc_sero_vacperiod_df$Pair_Name == p), "Proportion"] = t_count/num_PCV13
}
}
return(gpsc_sero_vacperiod_df)
}
# set base path for working directory
base_path<-getwd()
# set metadata file path
metadata_file_path <- paste0(base_path, "/Argentina_metadata.csv")
# set serotype colorcode file path
serotype_colorcode_file_path <- paste0(base_path, "/serotype__colours_patterns.csv")
# load input data
input_metadata <- read.csv(metadata_file_path)
data_frame = as.data.frame(input_metadata)
serotype_colorcode <- read.table(serotype_colorcode_file_path,
sep = ",", comment.char = "&", header = TRUE)
data_frame[which(data_frame$GPSC == "_"), "GPSC"] <- "Others"
data_frame[which(data_frame$GPSC == "904;9"), "GPSC"] <- "9"
data_frame[which(data_frame$In_Silico_Serotype == "_"), "In_Silico_Serotype"] <- "NT"
## Might need to check Vaccine Period
## Need to generate/transform the dataframe to each row as a GPSC-Serotype-Vaccine_Period pair with corresponding count/proportion
GPS_freq_table <- Generate_GPSC_Serotype_Vaccine_freqtable(metadata_df = data_frame,
pair_colname1="GPSC", pair_colname2="In_Silico_Serotype", pair_colname3="Vaccine_Period")
# Add serotype colour coding information to the frequency table
GPS_freq_table_sero_code_merge_gpsc <- merge(GPS_freq_table, serotype_colorcode, by="Serotype")
# Merge rare GPSC to "Others"
target_gpsc <- c("1", "2", "3", "4", "5", "6" ,"7", "8", "9", "10", "12", "13", "15", "16", "18", "23", "26", "31",
"32", "37", "44", "47", "50", "61", "70", "95", "113", "386", "657")
GPS_freq_table_sero_code_merge_gpsc[which(!GPS_freq_table_sero_code_merge_gpsc$GPSC %in% target_gpsc), "GPSC"] <- "Others"
head(GPS_freq_table_sero_code_merge_gpsc)
### Set GPSC order
GPSC_order <- c(target_gpsc, "Others")
GPS_freq_table_sero_code_merge_gpsc$GPSC <- factor(GPS_freq_table_sero_code_merge_gpsc$GPSC, levels=GPSC_order)
### Set vaccine period order
vaccine_period_order <- c("Pre-PCV","PCV7", "PCV13")
GPS_freq_table_sero_code_merge_gpsc$Vaccine_Period <- factor(GPS_freq_table_sero_code_merge_gpsc$Vaccine_Period, levels=vaccine_period_order)
GPS_freq_table_sero_code_merge_gpsc$Serotype <- as.factor(GPS_freq_table_sero_code_merge_gpsc$Serotype)
### Set serotype colour order
filled_colours <- GPS_freq_table_sero_code_merge_gpsc$Serotype__colour
names(filled_colours) <- GPS_freq_table_sero_code_merge_gpsc$Serotype
### Set serotype pattern order
filled_patterns <- GPS_freq_table_sero_code_merge_gpsc$ggpattern
names(filled_patterns) <- GPS_freq_table_sero_code_merge_gpsc$Vtype
GPS_freq_table_plot <- ggplot(GPS_freq_table_sero_code_merge_gpsc, aes(x = Vaccine_Period, y = Proportion, fill=Serotype, pattern=Vtype)) + #fill=Serotype, pattern=Serotype
geom_bar_pattern(position = "stack", stat = "identity", pattern_density=0.2, pattern_spacing=0.2, pattern_key_scale_factor = 1.2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 20),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
legend.text = element_text(size=20),
legend.title = element_text(size=25),
plot.caption = element_text(size=25))+
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
strip.text = element_text(size = 25),
panel.spacing = unit(-.01,"cm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key.size = unit(0.8, 'cm'))+
xlab("GPSC")+
ylim(c(0,0.3))+
facet_grid(~ GPSC, switch = "x") +
scale_fill_manual(values= filled_colours)+
scale_pattern_manual(values = filled_patterns, guide="none")+
labs(caption = "*Non-PCV13 Type are labeled with stripes")
#GPS_freq_table_plot
GPS_freq_table_plot
GPS_freq_table_plot
head(GPS_freq_table_sero_code_merge_gpsc)
GPS_freq_table_plot <- ggplot(GPS_freq_table_sero_code_merge_gpsc, aes(x = Vaccine_Period, y = Proportion, fill=Serotype, pattern=Vtype)) + #fill=Serotype, pattern=Serotype
geom_bar_pattern(position = "stack", stat = "identity", pattern_density=0.2, pattern_spacing=0.2, pattern_key_scale_factor = 1.2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 20),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
legend.text = element_text(size=20),
legend.title = element_text(size=25),
plot.caption = element_text(size=25))+
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
strip.text = element_text(size = 25),
panel.spacing = unit(-.01,"cm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key.size = unit(0.8, 'cm'))+
xlab("GPSC")+
ylim(c(0,0.3))+
facet_grid(~ GPSC, switch = "x") +
scale_fill_manual(values= filled_colours, name="Serotype")+
scale_fill_manual(values=Vaccine_Period, name="Vaccine Period")
filled_Vtype <- GPS_freq_table_sero_code_merge_gpsc$Serotype__colour
names(filled_colours) <- GPS_freq_table_sero_code_merge_gpsc$Vaccine_Period
filled_colours <- GPS_freq_table_sero_code_merge_gpsc$Serotype__colour
names(filled_colours) <- GPS_freq_table_sero_code_merge_gpsc$Serotype
filled_Vtype <- GPS_freq_table_sero_code_merge_gpsc$Serotype__colour
names(filled_Vtype) <- GPS_freq_table_sero_code_merge_gpsc$Vaccine_Period
GPS_freq_table_plot <- ggplot(GPS_freq_table_sero_code_merge_gpsc, aes(x = Vaccine_Period, y = Proportion, fill=Serotype, pattern=Vtype)) + #fill=Serotype, pattern=Serotype
geom_bar_pattern(position = "stack", stat = "identity", pattern_density=0.2, pattern_spacing=0.2, pattern_key_scale_factor = 1.2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 20),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
legend.text = element_text(size=20),
legend.title = element_text(size=25),
plot.caption = element_text(size=25))+
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
strip.text = element_text(size = 25),
panel.spacing = unit(-.01,"cm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key.size = unit(0.8, 'cm'))+
xlab("GPSC")+
ylim(c(0,0.3))+
facet_grid(~ GPSC, switch = "x") +
scale_fill_manual(values= filled_colours, name="Serotype")+
scale_fill_manual(values=filled_Vtype, name="Vaccine Period")
scale_pattern_manual(values = filled_patterns, guide="none")+
labs(caption = "*Non-PCV13 Type are labeled with stripes")
GPS_freq_table_plot <- ggplot(GPS_freq_table_sero_code_merge_gpsc, aes(x = Vaccine_Period, y = Proportion, fill=Serotype, pattern=Vtype)) + #fill=Serotype, pattern=Serotype
geom_bar_pattern(position = "stack", stat = "identity", pattern_density=0.2, pattern_spacing=0.2, pattern_key_scale_factor = 1.2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 20),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
legend.text = element_text(size=20),
legend.title = element_text(size=25),
plot.caption = element_text(size=25))+
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
strip.text = element_text(size = 25),
panel.spacing = unit(-.01,"cm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key.size = unit(0.8, 'cm'))+
xlab("GPSC")+
ylim(c(0,0.3))+
facet_grid(~ GPSC, switch = "x") +
scale_fill_manual(values= filled_colours, name="Serotype")+
scale_fill_manual(values=filled_Vtype, name="Vaccine Period")+
scale_pattern_manual(values = filled_patterns, guide="none")+
labs(caption = "*Non-PCV13 Type are labeled with stripes")
#GPS_freq_table_plot
GPS_freq_table_plot
GPS_freq_table_plot <- ggplot(GPS_freq_table_sero_code_merge_gpsc, aes(x = Vaccine_Period, y = Proportion, fill=Serotype, pattern=Vtype)) + #fill=Serotype, pattern=Serotype
geom_bar_pattern(position = "stack", stat = "identity", pattern_density=0.2, pattern_spacing=0.2, pattern_key_scale_factor = 1.2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 20),
axis.text.y = element_text(size = 25),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
legend.text = element_text(size=20),
legend.title = element_text(size=25),
plot.caption = element_text(size=25))+
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
strip.text = element_text(size = 25),
panel.spacing = unit(-.01,"cm"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.key.size = unit(0.8, 'cm'))+
xlab("GPSC")+
ylim(c(0,0.3))+
facet_grid(~ GPSC, switch = "x") +
scale_fill_manual(values= filled_colours, name="Serotype")+
scale_color_manual(values=filled_Vtype, name="Vaccine Period")+
scale_pattern_manual(values = filled_patterns, guide="none")+
labs(caption = "*Non-PCV13 Type are labeled with stripes")
GPS_freq_table_plot
